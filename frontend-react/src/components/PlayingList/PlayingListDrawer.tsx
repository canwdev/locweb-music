import React, {FC} from 'react'
import {AppBar, Box, Button, Drawer, Toolbar, Typography} from '@mui/material'
import PlaylistPlayIcon from '@mui/icons-material/PlaylistPlay'

import {styled} from '@mui/material/styles'

import Fab from '@mui/material/Fab'
import List from '@mui/material/List'
import ListItem from '@mui/material/ListItem'
import ListItemAvatar from '@mui/material/ListItemAvatar'
import ListItemText from '@mui/material/ListItemText'
import ListSubheader from '@mui/material/ListSubheader'
import Avatar from '@mui/material/Avatar'

const messages = [
  {
    id: 1,
    primary: 'Brunch this week?',
    secondary:
      "I'll be in the neighbourhood this week. Let's grab a bite to eat",
    person: '/static/images/avatar/5.jpg',
  },
  {
    id: 2,
    primary: 'Birthday Gift',
    secondary: `Do you have a suggestion for a good present for John on his work
      anniversary. I am really confused & would love your thoughts on it.`,
    person: '/static/images/avatar/1.jpg',
  },
  {
    id: 3,
    primary: 'Recipe to try',
    secondary:
      'I am try out this new BBQ recipe, I think this might be amazing',
    person: '/static/images/avatar/2.jpg',
  },
  {
    id: 4,
    primary: 'Yes!',
    secondary: 'I have the tickets to the ReactConf for this year.',
    person: '/static/images/avatar/3.jpg',
  },
  {
    id: 5,
    primary: "Doctor's Appointment",
    secondary:
      'My appointment for the doctor was rescheduled for next Saturday.',
    person: '/static/images/avatar/4.jpg',
  },
  {
    id: 6,
    primary: 'Discussion',
    secondary: `Menus that are generated by the bottom app bar (such as a bottom
      navigation drawer or overflow menu) open as bottom sheets at a higher elevation
      than the bar.`,
    person: '/static/images/avatar/5.jpg',
  },
  {
    id: 7,
    primary: 'Summer BBQ',
    secondary: `Who wants to have a cookout this weekend? I just got some furniture
      for my backyard and would love to fire up the grill.`,
    person: '/static/images/avatar/1.jpg',
  },
]

interface Props {
  drawerOpen: boolean
  setDrawerOpen: React.Dispatch<React.SetStateAction<boolean>>
}

const PlayingListDrawer: FC<Props> = (props) => {
  const {drawerOpen, setDrawerOpen} = props
  return (
    <Drawer
      anchor="right"
      open={drawerOpen}
      onClose={() => setDrawerOpen(false)}>
      <Box
        sx={{
          display: 'flex',
          minWidth: '350px',
          maxWidth: '500px',
        }}>
        <AppBar position="absolute" color="primary" sx={{top: 0}}>
          <Toolbar>
            <PlaylistPlayIcon sx={{mr: 1}} />
            <Typography variant="h6" component="div" sx={{flexGrow: 1}}>
              Now Playing
            </Typography>
            <Button color="inherit" onClick={() => setDrawerOpen(false)}>
              Close
            </Button>
          </Toolbar>
        </AppBar>
        <Box sx={{pt: '64px', pb: '64px'}}>
          <List sx={{mb: 2}}>
            {messages.map(({id, primary, secondary, person}) => (
              <React.Fragment key={id}>
                <ListItem button>
                  <ListItemAvatar>
                    <Avatar alt="Profile Picture" src={person} />
                  </ListItemAvatar>
                  <ListItemText primary={primary} secondary={secondary} />
                </ListItem>
              </React.Fragment>
            ))}
          </List>
        </Box>
        <AppBar
          position="absolute"
          color="primary"
          sx={{top: 'auto', bottom: 0}}>
          <Toolbar>
            <PlaylistPlayIcon sx={{mr: 1}} />
            <Typography variant="h6" component="div" sx={{flexGrow: 1}}>
              Now Playing
            </Typography>
            <Button color="inherit" onClick={() => setDrawerOpen(false)}>
              Close
            </Button>
          </Toolbar>
        </AppBar>
      </Box>
    </Drawer>
  )
}

export default PlayingListDrawer
